---
AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation stack for initializing the RDS with SQL scripts on a S3 bucket.
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups:
      - Label: 
          default: "Create a database (Leave empty if DB exists)"
        Parameters: 
          - DBInstanceName
          - DBInstanceType
      - Label: 
          default: "Use an existing database"
        Parameters: 
          - ExistingDBInstanceName
      - Label: 
          default: "Database configurations"
        Parameters: 
          - DBUsername
          - DBPassword
Parameters:
  ExistingDBInstanceName:
    Type: String
    Description: Existing database instance name. Overrides new database settings if not blank.
    # Must follow constraints, can't be blank
  DBInstanceName:
    Type: String
    Description: New database instance name. Case insensitive, but stored as all lower-case (1-63 alphanumeric, first character must be letter, cannot end with hyphen, cannot have consecutive hyphens)
    MinLength: 1
    MaxLength: 63
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
  DBUsername:
    Type: String
    Description: Enter a valid Database username (1-30 alphanumeric)
    MinLength: 1
    MaxLength: 30
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
  #===============================================
  #     Minimum password enforced by AWS:
  # MySQL: Must contain from 8 to 41 alphanumeric characters.
  # Oracle: Must contain from 8 to 30 alphanumeric characters.
  # SQL Server: Must contain from 8 to 128 alphanumeric characters.
  #===============================================
  DBPassword:
    Type: String
    Description: Enter a valid Database password (8-30 alphanumeric characters)
    NoEcho: true
    MinLength: 8
    MaxLength: 30
    AllowedPattern: "[a-zA-Z0-9]*"    
  DBInstanceType:
    Type: String
    Description: Enter one of the possible instance types for database.
    Default: db.t2.micro
    AllowedValues:
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
  #===============================================
  #     Storage size ranges enforced by AWS:
  # MySQL, MariaDB, PostgreSQL:
  #   gp2: 20 to 16384
  #   io1: 100 to 16384
  #   standard: 5 to 3072
  # Oracle: 
  #   gp2: 20 to 16384; Single-AZ $0.115 per GB-month/Multi-AZ $0.23 per GB-month
  #   io1: 100 to 16384; Single-AZ $0.125 per GB-month + $0.10 per IOPS-month/Multi-AZ $0.25 per GB-month + $0.20 per IOPS-month
  #   standard: 10 to 3072; Single-AZ $0.10 per GB-month + $0.10 per 1 million requests/Multi-AZ $0.20 per GB-month + $0.10 per 1 million requests
  # SQL Server:
  #   gp2: 20 to 16384
  #   io1: 100 to 16384
  #   standard: 20 to 1024
  #===============================================
  # DBStorageType:
    # Type: String
    # Description: Enter one of the possible instance storage type for database
    # AllowedValues:
      # - General Purpose (SSD) storage (gp2)
      # - Provisioned IOPS storage (io1)
      # - Magnetic storage (standard)
  # DBStorageSize:
    # Type: Number
    # Description: Enter a storage size for database
    # MinValue: 
    # MaxValue:
Resources:
  # Create the Oracle RDS
  SecurityGroupSierraRDS:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SecurityGroupSierraRDS
      GroupDescription: Security group for Sierra RDS backend
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 1521
          ToPort: 1521
          CidrIp: 0.0.0.0/0
  SierraRDS:
    Condition: CreatingNewDB
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '10'
        # Ref: DBStorageSize
      DBInstanceClass:
        Ref: DBInstanceType
      Engine: oracle-ee
      MasterUsername:
        Ref: DBUsername
      MasterUserPassword:
        Ref: DBPassword
      VPCSecurityGroups:
      - !GetAtt SecurityGroupSierraRDS.GroupId
      StorageType: standard
        # Ref: DBStorageType
      DBInstanceIdentifier:
        Ref: DBInstanceName
      # DeletionPolicy: Retain
      
Conditions:
  # Create new database if there is no existing database
  CreatingNewDB: !Equals [!Ref ExistingDBInstanceName, ""]